{"version":3,"file":"static/js/68.120ffb8b.chunk.js","mappings":"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","sources":["webpack://gamershouse/./src/pages/SignUp/SignUp.module.scss?e676","webpack://gamershouse/./src/components/ReactHookForm/ReactHookForm.module.scss?fdc6","webpack://gamershouse/./src/components/ButtonRegister/ButtonRegister.module.scss?281a","components/ButtonRegister/ButtonRegister.jsx","components/ReactHookForm/ReactHookForm.jsx","pages/SignUp/SignUp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registration\":\"SignUp_registration__Vfk05\",\"error-message\":\"SignUp_error-message__YovpS\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ReactHookForm_form__7jghC\",\"input\":\"ReactHookForm_input__tuce5\",\"field\":\"ReactHookForm_field__qFaY1\",\"error__message\":\"ReactHookForm_error__message__56Ex8\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonRegister_button__QdZBo\"};","import React from \"react\";\nimport styles from \"./ButtonRegister.module.scss\";\n\nconst ButtonRegister = ({ onClick }) => {\n  return (\n    <button className={styles.button} type=\"submit\" onClick={onClick}>\n      Register\n    </button>\n  );\n};\n\nexport default ButtonRegister;\n","import React, { memo } from \"react\";\nimport style from \"./ReactHookForm.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport ButtonRegister from \"../ButtonRegister/ButtonRegister\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ReactHookForm = () => {\n  const { register, handleSubmit, formState, getValues } = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const navigate = useNavigate();\n\n  const onSubmit = () => {\n    console.log(\"Form submit\");\n    navigate(\"/thank-you\");\n  };\n  const onError = (errors) => {\n    console.log(\"Form errors\", errors);\n  };\n\n  return (\n    <form\n      className={style.form}\n      onSubmit={handleSubmit(onSubmit, onError)}\n      action=\"\"\n    >\n      <div className={style.field}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className={style.input}\n          {...register(\"name\", {\n            required: \"Field is required\",\n            minLength: {\n              value: 2,\n              message: \"Field must be at least 2 characters long\",\n            },\n          })}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n        />\n        {formState.errors.name && (\n          <p className={style.error__message}>\n            {formState.errors.name.message}\n          </p>\n        )}\n      </div>\n      <div className={style.field}>\n        <label htmlFor=\"email\">Email adress</label>\n        <input\n          className={style.input}\n          {...register(\"email\", { required: \"Field is required\" })}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n        />\n        {formState.errors.email && (\n          <p className={style.error__message}>\n            {formState.errors.email.message}\n          </p>\n        )}\n      </div>\n      <div className={style.field}>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          className={style.input}\n          {...register(\"password\", {\n            required: \"Field is required\",\n            minLength: {\n              value: 8,\n              message: \"Password must be at least 8 characters long\",\n            },\n          })}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n        />\n        {formState.errors.password && (\n          <p className={style.error__message}>\n            {formState.errors.password.message}\n          </p>\n        )}\n      </div>\n      <div className={style.field}>\n        <label htmlFor=\"confirmPassword\">Confirm password</label>\n        <input\n          className={style.input}\n          {...register(\"confirmPassword\", {\n            required: \"Field is required\",\n            validate: (value) =>\n              value === getValues(\"password\") || \"The password must match\",\n          })}\n          type=\"password\"\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm password\"\n        />\n        {formState.errors.confirmPassword && (\n          <p className={style.error__message}>\n            {formState.errors.confirmPassword.message}\n          </p>\n        )}\n      </div>\n      <ButtonRegister />\n    </form>\n  );\n};\n\nexport default memo(ReactHookForm);\n","import React, { memo } from \"react\";\nimport style from \"./SignUp.module.scss\";\nimport ReactHookForm from \"../../components/ReactHookForm/ReactHookForm\";\n\nconst SignUp = () => {\n  return (\n    <div className={style.registration}>\n      <h2>Sign up</h2>\n      <ReactHookForm />\n    </div>\n  );\n};\n\nexport default memo(SignUp);\n"],"names":["_ref","onClick","_jsx","className","styles","type","children","ReactHookForm","register","handleSubmit","formState","getValues","useForm","defaultValues","name","email","password","confirmPassword","navigate","useNavigate","_jsxs","style","onSubmit","console","log","errors","action","htmlFor","required","minLength","value","message","id","placeholder","validate","ButtonRegister","memo","SignUp"],"sourceRoot":""}